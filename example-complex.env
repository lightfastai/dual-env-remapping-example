# Example demonstrating advanced dotenv features now supported by dual
# This file showcases the new capabilities added with godotenv integration

# ============================================
# Variable Expansion
# ============================================
# Define base URLs and expand them
PROTOCOL=https
DOMAIN=api.example.com
PORT=3000
BASE_URL=${PROTOCOL}://${DOMAIN}:${PORT}
API_ENDPOINT=$BASE_URL/v1
GRAPHQL_ENDPOINT=${BASE_URL}/graphql

# Nested expansion
APP_NAME=MyApp
VERSION=2.0.0
FULL_VERSION=${APP_NAME}-v${VERSION}
USER_AGENT="${FULL_VERSION} (${DOMAIN})"

# ============================================
# Multiline Values
# ============================================
# SSL Certificate
SSL_CERT="-----BEGIN CERTIFICATE-----
MIIDXTCCAkWgAwIBAgIJAKLdQVPy90WjMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX
aWRnaXRzIFB0eSBMdGQwHhcNMjQwMTAxMDAwMDAwWhcNMjUwMTAxMDAwMDAwWjBF
-----END CERTIFICATE-----"

# Private Key
PRIVATE_KEY='-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA...
...multiple lines...
-----END RSA PRIVATE KEY-----'

# SQL Query
DATABASE_QUERY="
  SELECT users.id, users.name, users.email
  FROM users
  JOIN roles ON users.role_id = roles.id
  WHERE users.active = true
  ORDER BY users.created_at DESC
"

# JSON Configuration
SERVICE_CONFIG='{
  "database": {
    "host": "localhost",
    "port": 5432,
    "name": "myapp_${NODE_ENV}"
  },
  "redis": {
    "host": "localhost",
    "port": 6379
  }
}'

# ============================================
# Escape Sequences (in double quotes)
# ============================================
# Newlines
WELCOME_MESSAGE="Welcome to ${APP_NAME}!\nVersion: ${VERSION}\nEnvironment: production"

# Tabs for formatting
TABLE_HEADER="ID\tName\tEmail\tStatus"

# Backslashes for Windows paths
WINDOWS_PATH="C:\\Program Files\\${APP_NAME}\\bin"

# Escaped quotes
JSON_TEMPLATE="{\"app\": \"${APP_NAME}\", \"message\": \"Hello, World!\"}"

# ============================================
# Inline Comments
# ============================================
# Comments are now stripped from values
DATABASE_HOST=localhost # Development database
DATABASE_PORT=5432 # PostgreSQL default port
DATABASE_NAME=myapp_dev # Development database name

# Comments work with complex values too
API_KEY="sk-1234567890abcdef" # Production API key (keep secret!)

# ============================================
# Quote Handling
# ============================================
# Single quotes prevent variable expansion and escape processing
LITERAL_VAR='${BASE_URL}/static'  # This will be literal: ${BASE_URL}/static
LITERAL_NEWLINE='Hello\nWorld'    # This will be literal: Hello\nWorld

# Mixed quotes in values
MIXED_QUOTES="She said 'Hello' to the world"
NESTED_QUOTES='{"key": "value with spaces"}'

# No quotes for simple values
SIMPLE_VALUE=production
NUMERIC_VALUE=42
BOOLEAN_VALUE=true

# ============================================
# Special Characters
# ============================================
# Hash symbols in values (use quotes if not a comment)
COLOR=#FF5733
CHANNEL="#general"
HASHTAG="#trending"

# Special characters that don't need quotes
EMAIL=admin@example.com
MATH=2+2=4
REGEX=^[a-z]+$

# URLs with query parameters
CALLBACK_URL=${BASE_URL}/auth/callback?client_id=12345&redirect_uri=${BASE_URL}

# ============================================
# Empty and Undefined Variables
# ============================================
# Empty values
EMPTY_STRING=""
EMPTY_VALUE=

# References to undefined variables expand to empty
UNDEFINED_REF=${DOES_NOT_EXIST}
PARTIAL_REF=prefix_${UNDEFINED}_suffix  # Results in: prefix__suffix

# ============================================
# Export Syntax
# ============================================
# Export syntax is supported and ignored
export NODE_ENV=production
export DEBUG=false

# ============================================
# Best Practices Examples
# ============================================
# Database connection URL with expansion
DB_USER=appuser
DB_PASS=secretpass
DB_HOST=${DATABASE_HOST}
DB_PORT=${DATABASE_PORT}
DB_NAME=${DATABASE_NAME}
DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# Service URLs using base configuration
AUTH_SERVICE_URL=${BASE_URL}/auth
USER_SERVICE_URL=${BASE_URL}/users
NOTIFICATION_SERVICE_URL=${BASE_URL}/notifications

# Feature flags
FEATURE_NEW_UI=true # Enable new UI
FEATURE_BETA_API=false # Beta API access
FEATURE_DEBUG_MODE=${DEBUG:-false} # Fallback to false if DEBUG not set

# Build configuration
BUILD_PATH=./dist
PUBLIC_URL=${BASE_URL}
ASSET_PATH=${PUBLIC_URL}/static
SOURCE_MAP=${NODE_ENV:+false} # Only set if NODE_ENV exists